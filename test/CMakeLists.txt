add_executable(test_load_urdf_model test_load_urdf_model.cpp)
add_executable(test_valkyrie_model test_valkyrie_model.cpp ${PROJECT_SOURCES})
add_executable(test_walking_pattern_generator test_walking_pattern_generator.cpp ${PROJECT_SOURCES})
add_executable(test_mihir_working_file test_mihir_working_file.cpp ${PROJECT_SOURCES})
add_executable(test_rkf45 test_rkf45.cpp ${PROJECT_SOURCES})
add_executable(test_rviz_valkyrie test_rviz_valkyrie.cpp ${PROJECT_SOURCES})
add_executable(test_viz_feasibility test_viz_feasibility.cpp ${PROJECT_SOURCES})
add_executable(test_prioritized_ik test_prioritized_ik.cpp ${PROJECT_SOURCES})
add_executable(test_yaml_emitter test_yaml_emitter.cpp ${PROJECT_SOURCES})

target_link_libraries(test_load_urdf_model ${PROJECT_LIBRARIES})
target_link_libraries(test_valkyrie_model  ${PROJECT_LIBRARIES})
target_link_libraries(test_walking_pattern_generator ${PROJECT_LIBRARIES})
target_link_libraries(test_mihir_working_file ${PROJECT_LIBRARIES})
target_link_libraries(test_rkf45 ${PROJECT_LIBRARIES})
target_link_libraries(test_rviz_valkyrie ${PROJECT_LIBRARIES})
target_link_libraries(test_viz_feasibility ${PROJECT_LIBRARIES})
target_link_libraries(test_prioritized_ik ${PROJECT_LIBRARIES})
target_link_libraries(test_yaml_emitter ${PROJECT_LIBRARIES})

