# add_executable(test_load_urdf_model test_load_urdf_model.cpp)
# add_executable(test_valkyrie_model test_valkyrie_model.cpp ${PROJECT_SOURCES})
# add_executable(test_walking_pattern_generator test_walking_pattern_generator.cpp ${PROJECT_SOURCES})
# add_executable(test_simpleboxes test_simpleboxes.cpp ${PROJECT_SOURCES})
# add_executable(test_computeCollision test_computeCollision.cpp ${PROJECT_SOURCES})
# add_executable(test_computeDistance test_computeDistance.cpp ${PROJECT_SOURCES})
# add_executable(test_boxbox_computeDistance test_boxbox_computeDistance.cpp ${PROJECT_SOURCES})
# add_executable(test_boxrobot test_boxrobot.cpp ${PROJECT_SOURCES})
# add_executable(test_appendGeometry test_appendGeometry.cpp ${PROJECT_SOURCES})
# add_executable(test_removeCollisionPairs test_removeCollisionPairs.cpp ${PROJECT_SOURCES})
# add_executable(test_rviz_valkyrie test_rviz_valkyrie.cpp ${PROJECT_SOURCES})
# add_executable(test_mihir_working_file test_mihir_working_file.cpp ${PROJECT_SOURCES})
# add_executable(test_rkf45 test_rkf45.cpp ${PROJECT_SOURCES})
# add_executable(test_viz_feasibility test_viz_feasibility.cpp ${PROJECT_SOURCES})
# add_executable(test_prioritized_ik test_prioritized_ik.cpp ${PROJECT_SOURCES})
# add_executable(test_yaml_emitter test_yaml_emitter.cpp ${PROJECT_SOURCES})
# add_executable(test_data_saver test_data_saver.cpp ${PROJECT_SOURCES})
# add_executable(test_load_and_viz test_load_and_viz.cpp ${PROJECT_SOURCES})
# add_executable(test_gmm_fit test_gmm_fit.cpp ${PROJECT_SOURCES})
# add_executable(test_tasks test_tasks.cpp ${PROJECT_SOURCES})
# add_executable(test_gmm_config_fit test_gmm_config_fit.cpp ${PROJECT_SOURCES})
# add_executable(test_ik_module test_ik_module.cpp ${PROJECT_SOURCES})
add_executable(test_collision_environment test_collision_environment.cpp ${PROJECT_SOURCES})
# add_executable(test_ik_selfcollision test_ik_selfcollision.cpp ${PROJECT_SOURCES})
# add_executable(test_directedvectors_case_incollision test_directedvectors_case_incollision.cpp ${PROJECT_SOURCES})
# add_executable(test_ik_objectcollision test_ik_objectcollision.cpp ${PROJECT_SOURCES})
# add_executable(test_multiple_selfcollision test_multiple_selfcollision.cpp ${PROJECT_SOURCES})
# add_executable(test_visualize_door_waypoints test_visualize_door_waypoints.cpp ${PROJECT_SOURCES})
# add_executable(test_visualize_panel_waypoints test_visualize_panel_waypoints.cpp ${PROJECT_SOURCES})
# add_executable(test_interpolation_module test_interpolation_module.cpp ${PROJECT_SOURCES})
# add_executable(test_config_trajectory_generator test_config_trajectory_generator.cpp ${PROJECT_SOURCES})

# target_link_libraries(test_load_urdf_model ${PROJECT_LIBRARIES})
# target_link_libraries(test_valkyrie_model  ${PROJECT_LIBRARIES})
# target_link_libraries(test_walking_pattern_generator ${PROJECT_LIBRARIES})
# target_link_libraries(test_simpleboxes ${PROJECT_LIBRARIES})
# target_link_libraries(test_computeCollision ${PROJECT_LIBRARIES})
# target_link_libraries(test_computeDistance ${PROJECT_LIBRARIES})
# target_link_libraries(test_boxbox_computeDistance ${PROJECT_LIBRARIES})
# target_link_libraries(test_boxrobot ${PROJECT_LIBRARIES})
# target_link_libraries(test_appendGeometry ${PROJECT_LIBRARIES})
# target_link_libraries(test_removeCollisionPairs ${PROJECT_LIBRARIES})
# target_link_libraries(test_mihir_working_file ${PROJECT_LIBRARIES})
# target_link_libraries(test_rkf45 ${PROJECT_LIBRARIES})
# target_link_libraries(test_rviz_valkyrie ${PROJECT_LIBRARIES})
# target_link_libraries(test_viz_feasibility ${PROJECT_LIBRARIES})
# target_link_libraries(test_prioritized_ik ${PROJECT_LIBRARIES})
# target_link_libraries(test_yaml_emitter ${PROJECT_LIBRARIES})
# target_link_libraries(test_data_saver ${PROJECT_LIBRARIES})
# target_link_libraries(test_load_and_viz ${PROJECT_LIBRARIES})
# target_link_libraries(test_gmm_fit ${PROJECT_LIBRARIES})
# target_link_libraries(test_tasks ${PROJECT_LIBRARIES})
# target_link_libraries(test_gmm_config_fit ${PROJECT_LIBRARIES})
# target_link_libraries(test_ik_module ${PROJECT_LIBRARIES})
target_link_libraries(test_collision_environment ${PROJECT_LIBRARIES})
# target_link_libraries(test_ik_selfcollision ${PROJECT_LIBRARIES})
# target_link_libraries(test_directedvectors_case_incollision ${PROJECT_LIBRARIES})
# target_link_libraries(test_ik_objectcollision ${PROJECT_LIBRARIES})
# target_link_libraries(test_multiple_selfcollision ${PROJECT_LIBRARIES})
# target_link_libraries(test_visualize_door_waypoints ${PROJECT_LIBRARIES})
# target_link_libraries(test_visualize_panel_waypoints ${PROJECT_LIBRARIES})
# target_link_libraries(test_interpolation_module ${PROJECT_LIBRARIES})
# target_link_libraries(test_config_trajectory_generator ${PROJECT_LIBRARIES})

